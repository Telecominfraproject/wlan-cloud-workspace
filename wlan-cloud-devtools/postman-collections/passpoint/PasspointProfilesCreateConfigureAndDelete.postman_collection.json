{
	"info": {
		"_postman_id": "53aa9a64-7bb0-4716-ad50-54ed9dd65961",
		"name": "PasspointProfiles Hotspot2.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get access token - to be used as Bearer token header for all other API requests. Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get access token\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.access_token);",
							"    pm.environment.set(\"access-token\", jsonData.access_token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/management/v1/oauth2/token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"management",
						"v1",
						"oauth2",
						"token"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"access_token\": \"<string>\",\n \"refresh_token\": \"<string>\",\n \"id_token\": \"<string>\",\n \"token_type\": \"<string>\",\n \"expires_in\": \"<integer>\",\n \"idle_timeout\": \"<integer>\",\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": \"<boolean>\",\n   \"ReadWrite\": \"<boolean>\",\n   \"ReadWriteCreate\": \"<boolean>\",\n   \"Delete\": \"<boolean>\",\n   \"PortalLogin\": \"<boolean>\"\n  }\n }\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"<string>\",\n \"error\": \"<string>\",\n \"path\": \"<string>\",\n \"timestamp\": \"<long>\"\n}"
				}
			]
		},
		{
			"name": "Create new Radius Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get radius server id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"radius-profile-id\", Number(jsonData.id));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"radius-profile-name\", \"radius-profile-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"radius\",\n        \"name\": \"{{radius-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"RadiusProfile\",\n            \"primaryRadiusAuthServer\": {\n                \"model_type\": \"RadiusServer\",\n                \"ipAddress\": \"{{$randomIP}}\",\n                \"secret\": \"{{$randomPassword}}\",\n                \"port\": 1812,\n                \"timeout\": 5\n            },\n            \"secondaryRadiusAuthServer\": null,\n            \"primaryRadiusAccountingServer\": {\n                \"model_type\": \"RadiusServer\",\n                \"ipAddress\": \"{{$randomIP}}\",\n                \"secret\": \"{{$randomPassword}}\",\n                \"port\": 1813,\n                \"timeout\": 5\n            },\n            \"secondaryRadiusAccountingServer\": null,\n            \"profileType\": \"radius\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create new Rf Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get rf profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"rf-profile-name\", jsonData.name);",
							"    pm.environment.set(\"rf-profile-id\", Number(jsonData.id,Number));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"rf-profile-name\", \"rf-profile-\"+'{{$timestamp}}');",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"rf\",\n        \"name\": \"{{rf-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"RfConfiguration\",\n            \"rfConfigMap\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHz\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is2dot4GHz\",\n                    \"radioMode\": \"modeN\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is20MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 20,\n                        \"minLoadFactor\": 50\n                    }\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHzU\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHzL\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                }\n            },\n            \"profileType\": \"rf\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new ssid profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get ssid profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"ssid-profile-name\", jsonData.name);",
							"    pm.environment.set(\"ssid-profile-id\", Number(jsonData.id));",
							"    pm.environment.set(\"ssid-profile-last-modified\", Number(jsonData.lastModifiedTimestamp));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ssid-profile-name\", \"ssid-passpoint-access-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"ssid\",\n        \"name\": \"{{ssid-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-passpoint-access\",\n            \"appliedRadios\": [\n                \"is5GHz\",\n                \"is5GHzL\",\n                \"is5GHzU\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"wpaEAP\",\n            \"vlanId\": 1,\n            \"dynamicVlan\": \"disabled\",\n            \"keyStr\": \"{{$randomPassword}}\",\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": {{radius-profile-id}},\n            \"radiusAcountingServiceInterval\": 60,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"useRadiusProxy\": false,\n            \"wepConfig\": null,\n            \"forwardMode\": \"BRIDGE\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": null\n            },\n            \"profileType\": \"ssid\"\n        },\n        \"childProfileIds\": [\n            {{radius-profile-id}}\n        ]\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create new osu ssid profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get osu ssid profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"osu-ssid-profile-id\", Number(jsonData.id));",
							"    pm.environment.set(\"ssid-osu-profile-name\", jsonData.name);",
							"    pm.environment.set(\"osu-ssid-profile-last-modified\", Number(jsonData.lastModifiedTimestamp));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ssid-osu-profile-name\", \"ssid-passpoint-osu-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"ssid\",\n        \"name\": \"{{ssid-osu-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-passpoint-osu\",\n            \"appliedRadios\": [\n                \"is2dot4GHz\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"open\",\n            \"vlanId\": 1,\n            \"dynamicVlan\": \"disabled\",\n            \"keyStr\": null,\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": 0,\n            \"radiusAcountingServiceInterval\": 60,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"useRadiusProxy\": false,\n            \"wepConfig\": null,\n            \"forwardMode\": null,\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": null\n            },\n            \"profileType\": \"ssid\"\n        },\n        \"createdTimestamp\": 1615568264377,\n        \"lastModifiedTimestamp\": 1615568264835,\n        \"childProfileIds\": [\n        ]\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create first passpoint osu provider profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get passpoint osu provider profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"passpoint-osu-provider-profile-id\", Number(jsonData.id));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"passpoint-osu-provider-profile-name\", \"passpoint-osu-provider-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"passpoint_osu_id_provider\",\n        \"name\": \"{{passpoint-osu-provider-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOsuProviderProfile\",\n            \"mccMncList\": [\n                {\n                    \"model_type\": \"PasspointMccMnc\",\n                    \"mcc\": 302,\n                    \"mnc\": 720,\n                    \"iso\": \"ca\",\n                    \"country\": \"Canada\",\n                    \"countryCode\": 1,\n                    \"network\": \"Rogers AT&T Wireless\",\n                    \"mccMncPairing\": \"302,720\"\n                }\n            ],\n            \"naiRealmList\": [\n                {\n                    \"model_type\": \"PasspointNaiRealmInformation\",\n                    \"naiRealms\": [\n                        \"rogers.com\"\n                    ],\n                    \"encoding\": 0,\n                    \"eapMethods\": [\n                        \"EAP-TTLS with username/password\",\n                        \"EAP-TLS with certificate\"\n                    ],\n                    \"eapMap\": {\n                        \"EAP-TTLS with username/password\": [\n                            \"Credential Type:username/password\",\n                            \"Non-EAP Inner Authentication Type:MSCHAPV2\"\n                        ],\n                        \"EAP-TLS with certificate\": [\n                            \"Credential Type:Certificate\"\n                        ]\n                    }\n                }\n            ],\n            \"osuIconList\": [\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_CA\",\n                    \"iconName\": \"icon32eng\",\n                    \"filePath\": \"/tmp/icon32eng.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32eng.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32eng:/tmp/icon32eng.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"fra\",\n                    \"iconLocale\": \"fr_CA\",\n                    \"iconName\": \"icon32fra\",\n                    \"filePath\": \"/tmp/icon32fra.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32fra.png\",\n                    \"hs20IconString\": \"32:32:fra:image/png:icon32fra:/tmp/icon32fra.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_US\",\n                    \"iconName\": \"icon32usa\",\n                    \"filePath\": \"/tmp/icon32usa.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32usa.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32usa:/tmp/icon32usa.png\"\n                }\n            ],\n            \"osuServerUri\": \"https://example.com/osu/rogers\",\n            \"osuFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example provider rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example provider rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de fournisseur rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemple de fournisseur rogers\"\n                }\n            ],\n            \"osuNaiStandalone\": \"anonymous@rogers.com\",\n            \"osuNaiShared\": \"anonymous@rogers.com\",\n            \"osuMethodList\": [\n                1,\n                0\n            ],\n            \"osuServiceDescription\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example services rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemples de services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemples de services rogers\"\n                }\n            ],\n            \"roamingOi\": [\n                \"BAA2D00100\",\n                \"BAA2D00000\",\n                \"F4F5E8F5F4\",\n                \"005014\",\n                \"004096\"\n            ],\n            \"profileType\": \"passpoint_osu_id_provider\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create second passpoint osu provider profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get passpoint osu-provider2 profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"passpoint-osu-provider2-profile-id\", Number(jsonData.id));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"passpoint-osu-provider2-profile-name\", \"passpoint-osu-provider2-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"passpoint_osu_id_provider\",\n        \"name\": \"{{passpoint-osu-provider2-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOsuProviderProfile\",\n            \"mccMncList\": [\n                {\n                    \"model_type\": \"PasspointMccMnc\",\n                    \"mcc\": 302,\n                    \"mnc\": 720,\n                    \"iso\": \"ca\",\n                    \"country\": \"Canada\",\n                    \"countryCode\": 1,\n                    \"network\": \"Rogers AT&T Wireless\",\n                    \"mccMncPairing\": \"302,720\"\n                }\n            ],\n            \"naiRealmList\": [\n                {\n                    \"model_type\": \"PasspointNaiRealmInformation\",\n                    \"naiRealms\": [\n                        \"rogers.com\"\n                    ],\n                    \"encoding\": 0,\n                    \"eapMethods\": [\n                        \"EAP-TTLS with username/password\",\n                        \"EAP-TLS with certificate\"\n                    ],\n                    \"eapMap\": {\n                        \"EAP-TTLS with username/password\": [\n                            \"Credential Type:username/password\",\n                            \"Non-EAP Inner Authentication Type:MSCHAPV2\"\n                        ],\n                        \"EAP-TLS with certificate\": [\n                            \"Credential Type:Certificate\"\n                        ]\n                    }\n                }\n            ],\n            \"osuIconList\": [\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_CA\",\n                    \"iconName\": \"icon32eng\",\n                    \"filePath\": \"/tmp/icon32eng.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32eng.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32eng:/tmp/icon32eng.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"fra\",\n                    \"iconLocale\": \"fr_CA\",\n                    \"iconName\": \"icon32fra\",\n                    \"filePath\": \"/tmp/icon32fra.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32fra.png\",\n                    \"hs20IconString\": \"32:32:fra:image/png:icon32fra:/tmp/icon32fra.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_US\",\n                    \"iconName\": \"icon32usa\",\n                    \"filePath\": \"/tmp/icon32usa.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32usa.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32usa:/tmp/icon32usa.png\"\n                }\n            ],\n            \"osuServerUri\": \"https://example.com/osu/rogers\",\n            \"osuFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example provider rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example provider rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de fournisseur rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemple de fournisseur rogers\"\n                }\n            ],\n            \"osuNaiStandalone\": \"anonymous@rogers.com\",\n            \"osuNaiShared\": \"anonymous@rogers.com\",\n            \"osuMethodList\": [\n                1,\n                0\n            ],\n            \"osuServiceDescription\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example services rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemples de services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemples de services rogers\"\n                }\n            ],\n            \"roamingOi\": [\n                \"BAA2D00100\",\n                \"BAA2D00000\",\n                \"F4F5E8F5F4\",\n                \"005014\",\n                \"004096\"\n            ],\n            \"profileType\": \"passpoint_osu_id_provider\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new passpoint operator profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get passpoint operator profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"passpoint-operator-profile-id\", Number(jsonData.id));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"passpoint-operator-profile-name\", \"passpoint-operator-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"passpoint_operator\",\n        \"name\": \"{{passpoint-operator-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOperatorProfile\",\n            \"serverOnlyAuthenticatedL2EncryptionNetwork\": false,\n            \"x509CertificateLocation\": \"/etc/ca.pem\",\n            \"operatorFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Default friendly passpoint_operator name\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Default friendly passpoint_operator name\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Nom de l'opérateur convivial par défaut\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Nom de l'opérateur convivial par défaut\"\n                }\n            ],\n            \"domainNameList\": [\n                \"bell.ca\",\n                \"rogers.com\",\n                \"telus.com\"\n            ],\n            \"profileType\": \"passpoint_operator\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create new passpoint venue profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get passpoint venue profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"passpoint-venue-profile-id\", Number(jsonData.id));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"passpoint-venue-profile-name\", \"passpoint-venue-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"passpoint_venue\",\n        \"name\": \"{{passpoint-venue-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointVenueProfile\",\n            \"venueNameSet\": [\n                {\n                    \"model_type\": \"PasspointVenueName\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de lieu\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"venueUrl\": \"http://www.example.com/info-fra\",\n                    \"asDuple\": \"fra:Exemple de lieu\"\n                },\n                {\n                    \"model_type\": \"PasspointVenueName\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example passpoint_venue\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"venueUrl\": \"http://www.example.com/info-eng\",\n                    \"asDuple\": \"eng:Example passpoint_venue\"\n                }\n            ],\n            \"venueTypeAssignment\": {\n                \"model_type\": \"PasspointVenueTypeAssignment\",\n                \"venueDescription\": \"Research and Development Facility\",\n                \"venueGroupId\": 2,\n                \"venueTypeId\": 8\n            },\n            \"profileType\": \"passpoint_venue\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new passpoint profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get passpoint profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"passpoint-profile-id\", Number(jsonData.id));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"passpoint-profile-name\", \"passpoint-profile-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"model_type\": \"Profile\",\n    \"customerId\": 2,\n    \"profileType\": \"passpoint\",\n    \"name\": \"{{passpoint-profile-name}}\",\n    \"details\": {\n        \"model_type\": \"PasspointProfile\",\n        \"enableInterworkingAndHs20\": true,\n        \"hessid\": \"02:03:04:05:06:07\",\n        \"passpointAccessNetworkType\": \"free_public_network\",\n        \"passpointNetworkAuthenticationType\": \"acceptance_of_terms_and_conditions\",\n        \"additionalStepsRequiredForAccess\": 0,\n        \"deauthRequestTimeout\": 0,\n        \"operatingClass\": 0,\n        \"termsAndConditionsFile\": {\n            \"model_type\": \"ManagedFileInfo\",\n            \"md5checksum\": null,\n            \"lastModifiedTimestamp\": null,\n            \"apExportUrl\": \"https://localhost:9091/filestore/termsAndConditions\",\n            \"fileCategory\": \"ExternalPolicyConfiguration\",\n            \"fileType\": \"TEXT\",\n            \"altSlot\": false\n        },\n        \"whitelistDomain\": null,\n        \"emergencyServicesReachable\": true,\n        \"unauthenticatedEmergencyServiceAccessible\": false,\n        \"internetConnectivity\": true,\n        \"connectionCapabilitySet\": [\n            {\n                \"model_type\": \"PasspointConnectionCapability\",\n                \"connectionCapabilitiesPortNumber\": 8888,\n                \"connectionCapabilitiesStatus\": \"open\",\n                \"connectionCapabilitiesIpProtocol\": \"TCP\"\n            }\n        ],\n        \"ipAddressTypeAvailability\": \"public_IPv4_address_available\",\n        \"qosMapSetConfiguration\": [\n            \"53\",\n            \"2\",\n            \"22\",\n            \"6\",\n            \"8\",\n            \"15\",\n            \"0\",\n            \"7\",\n            \"255\",\n            \"255\",\n            \"16\",\n            \"31\",\n            \"32\",\n            \"39\",\n            \"255\",\n            \"255\",\n            \"40\",\n            \"47\",\n            \"255\",\n            \"255\"\n        ],\n        \"apGeospatialLocation\": null,\n        \"apCivicLocation\": null,\n        \"apPublicLocationIdUri\": null,\n        \"gasAddr3Behaviour\": \"p2pSpecWorkaroundFromRequest\",\n        \"anqpDomainId\": 1234,\n        \"disableDownstreamGroupAddressedForwarding\": false,\n        \"enable2pt4GHz\": true,\n        \"enable5GHz\": true,\n        \"associatedAccessSsidProfileIds\": [\n            {{ssid-profile-id}}\n        ],\n        \"osuSsidProfileId\": {{osu-ssid-profile-id}},\n        \"passpointOperatorProfileId\": {{passpoint-operator-profile-id}},\n        \"passpointVenueProfileId\": {{passpoint-venue-profile-id}},\n        \"passpointOsuProviderProfileIds\": [\n            {{passpoint-osu-provider-profile-id}},\n            {{passpoint-osu-provider2-profile-id}}\n        ],\n        \"accessNetworkType\": \"free_public_network\",\n        \"networkAuthenticationType\": \"acceptance_of_terms_and_conditions\",\n        \"profileType\": \"passpoint\"\n    },\n    \"childProfileIds\": [\n        {{passpoint-venue-profile-id}},\n        {{passpoint-operator-profile-id}},\n        {{passpoint-osu-provider-profile-id}},\n        {{passpoint-osu-provider2-profile-id}}\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "update ssid profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get ssid profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"ssid-profile-name\", jsonData.name);",
							"    pm.environment.set(\"ssid-profile-id\", Number(jsonData.id));",
							"    pm.environment.set(\"ssid-profile-last-modified\", Number(jsonData.lastModifiedTimestamp));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": {{ssid-profile-id}},\n    \"customerId\": 2,\n    \"profileType\": \"ssid\",\n    \"name\": \"{{ssid-profile-name}}\",\n    \"details\": {\n        \"model_type\": \"SsidConfiguration\",\n        \"ssid\": \"ssid-passpoint-access\",\n        \"appliedRadios\": [\n            \"is5GHzL\",\n            \"is5GHz\",\n            \"is5GHzU\"\n        ],\n        \"ssidAdminState\": \"enabled\",\n        \"secureMode\": \"wpaEAP\",\n        \"vlanId\": 1,\n        \"dynamicVlan\": \"disabled\",\n        \"keyStr\": \"VjXyX8s9F1iczhQ\",\n        \"broadcastSsid\": \"enabled\",\n        \"keyRefresh\": 0,\n        \"noLocalSubnets\": false,\n        \"radiusServiceId\": {{radius-profile-id}},\n        \"radiusAcountingServiceInterval\": 60,\n        \"captivePortalId\": null,\n        \"bandwidthLimitDown\": 0,\n        \"bandwidthLimitUp\": 0,\n        \"clientBandwidthLimitDown\": 0,\n        \"clientBandwidthLimitUp\": 0,\n        \"videoTrafficOnly\": false,\n        \"radioBasedConfigs\": {\n            \"is5GHzL\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            }\n        },\n        \"bonjourGatewayProfileId\": null,\n        \"enable80211w\": null,\n        \"useRadiusProxy\": false,\n        \"wepConfig\": null,\n        \"forwardMode\": \"BRIDGE\",\n        \"radiusClientConfiguration\": {\n            \"model_type\": \"RadiusNasConfiguration\",\n            \"nasClientId\": \"DEFAULT\",\n            \"nasClientIp\": \"WAN_IP\",\n            \"userDefinedNasId\": null,\n            \"userDefinedNasIp\": null,\n            \"operatorId\": null\n        },\n        \"profileType\": \"ssid\"\n    },\n    \"createdTimestamp\": 1615571670299,\n    \"lastModifiedTimestamp\": {{ssid-profile-last-modified}},\n    \"childProfileIds\": [\n        {{radius-profile-id}},\n        {{passpoint-profile-id}}\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "update osu ssid profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get osu ssid profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"osu-ssid-profile-id\", Number(jsonData.id));",
							"    pm.environment.set(\"ssid-osu-profile-name\", jsonData.name);",
							"    pm.environment.set(\"osu-ssid-profile-last-modified\", Number(jsonData.lastModifiedTimestamp));",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ssid-osu-profile-name\", \"ssid-passpoint-osu-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": {{osu-ssid-profile-id}},\n    \"customerId\": 2,\n    \"profileType\": \"ssid\",\n    \"name\": \"{{ssid-osu-profile-name}}\",\n    \"details\": {\n        \"model_type\": \"SsidConfiguration\",\n        \"ssid\": \"ssid-passpoint-osu\",\n        \"appliedRadios\": [\n            \"is2dot4GHz\"\n        ],\n        \"ssidAdminState\": \"enabled\",\n        \"secureMode\": \"open\",\n        \"vlanId\": 1,\n        \"dynamicVlan\": \"disabled\",\n        \"keyStr\": null,\n        \"broadcastSsid\": \"enabled\",\n        \"keyRefresh\": 0,\n        \"noLocalSubnets\": false,\n        \"radiusServiceId\": 0,\n        \"radiusAcountingServiceInterval\": 60,\n        \"captivePortalId\": null,\n        \"bandwidthLimitDown\": 0,\n        \"bandwidthLimitUp\": 0,\n        \"clientBandwidthLimitDown\": 0,\n        \"clientBandwidthLimitUp\": 0,\n        \"videoTrafficOnly\": false,\n        \"radioBasedConfigs\": {\n            \"is5GHzL\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            }\n        },\n        \"bonjourGatewayProfileId\": null,\n        \"enable80211w\": null,\n        \"useRadiusProxy\": false,\n        \"wepConfig\": null,\n        \"forwardMode\": null,\n        \"radiusClientConfiguration\": {\n            \"model_type\": \"RadiusNasConfiguration\",\n            \"nasClientId\": \"DEFAULT\",\n            \"nasClientIp\": \"WAN_IP\",\n            \"userDefinedNasId\": null,\n            \"userDefinedNasIp\": null,\n            \"operatorId\": null\n        },\n        \"profileType\": \"ssid\"\n    },\n    \"createdTimestamp\": 1615571732233,\n    \"lastModifiedTimestamp\": {{osu-ssid-profile-last-modified}},\n    \"childProfileIds\": [\n        {{passpoint-osu-provider-profile-id}},\n        {{passpoint-osu-provider2-profile-id}}\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create new ap profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get metrics id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"profile-ap-name\", jsonData.name);",
							"    pm.environment.set(\"profile-ap-id\", Number(jsonData.id));",
							"    pm.environment.set(\"profile-ap-last-modified\", jsonData.lastModifiedTimestamp);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ap-profile-name\", \"hotspot20-ap-profile-\"+'{{$timestamp}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"model_type\": \"Profile\",\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"{{ap-profile-name}}\",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": \"pool.ntp.org\"\n        },\n        \"syslogRelay\": null,\n        \"rtlsSettings\": null,\n        \"syntheticClientEnabled\": true,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": \"gre1\",\n                \"greRemoteInetAddr\": \"{{$randomIP}}\",\n                \"vlanIdsInGreTunnel\": [\n                    100\n                ]\n            }\n        ],\n        \"radiusProxyConfigurations\": [\n            {\n                \"model_type\": \"RadiusProxyConfiguration\",\n                \"caCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/cacert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/clientcert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientKey\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/client_dec.key\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"KEY\",\n                    \"altSlot\": false\n                },\n                \"server\": \"231.239.180.165\",\n                \"port\": 1812,\n                \"realm\": [\n                    \"virgie.com\",\n                    \"marshall.org\",\n                    \"haven.name\"\n                ],\n                \"name\": \"initiatives\",\n                \"passphrase\": \"WmGucI_V0VObrKT\",\n                \"useRadSec\": false\n            },\n            {\n                \"model_type\": \"RadiusProxyConfiguration\",\n                \"caCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/cacert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/clientcert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientKey\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": null,\n                    \"lastModifiedTimestamp\": null,\n                    \"apExportUrl\": \"/filestore/client_dec.key\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"KEY\",\n                    \"altSlot\": false\n                },\n                \"server\": \"45.16.67.202\",\n                \"port\": 1812,\n                \"realm\": [\n                    \"derek.biz\",\n                    \"andy.biz\",\n                    \"gus.com\"\n                ],\n                \"name\": \"blockchains\",\n                \"passphrase\": \"VvHUF67LviR0hOV\",\n                \"useRadSec\": false\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"childProfileIds\": [\n        {{ssid-profile-id}},\n        {{osu-ssid-profile-id}},\n        {{rf-profile-id}}\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:9091"
		}
	]
}