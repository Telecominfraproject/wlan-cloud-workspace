{
	"info": {
		"_postman_id": "22cb848e-1581-47b6-b9ea-0978206ac7f6",
		"name": "PasspointProfilesCreateConfigureAndDelete",
		"description": "This collection comes with the required variables defined as it's environment. It is recommended that any variable alterations or settings are performed in the Variables section of the collection, and that no other environment is used simulataneously, as this can cause confusing errors.\n\nPrimary purpose of this collection is to facilitate creation of Hotspot profiles for application to an AP. Additional required configuration profiles are included.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create hotspot profile and dependents",
			"item": [
				{
					"name": "Get access token - to be used as Bearer token header for all other API requests. Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get access token\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.access_token);",
									"    // pm.environment.set(\"access-token\", jsonData.access_token);",
									"    pm.collectionVariables.set(\"access-token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"do anim\",\n \"refresh_token\": \"ut cillum id\",\n \"token_type\": \"elit consequat\",\n \"expires_in\": 41796161,\n \"idle_timeout\": 17636219,\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": false,\n   \"ReadWrite\": true,\n   \"ReadWriteCreate\": true,\n   \"Delete\": false,\n   \"PortalLogin\": false\n  }\n }\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new Radius Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Get radius server id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"access-profile-radius-service-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"radius-profile-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-radius-last-modified\", jsonData.lastModifiedTimestamp);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"access-profile-radius-service-name\", \"radius-profile-\"+'{{$isoTimestamp}}');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model_type\": \"Profile\",\n    \"customerId\": 2,\n    \"profileType\": \"radius\",\n    \"name\": \"{{access-profile-radius-service-name}}\",\n    \"details\": {\n        \"model_type\": \"RadiusProfile\",\n        \"primaryRadiusServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"192.168.0.1\",\n            \"secret\": \"testing123\",\n            \"authPort\": 1812,\n            \"timeout\": null\n        },\n        \"secondaryRadiusServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"192.168.0.2\",\n            \"secret\": \"testing123\",\n            \"authPort\": 1812,\n            \"timeout\": null\n        },\n        \"radiusSubnetConfiguration\": null,\n        \"profileType\": \"radius\"\n    },\n    \"childProfileIds\": []\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Create new Radius Accounting Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Get radius server id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"access-profile-radius-accounting-service-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"radius-accounting-profile-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-radius-accounting-last-modified\", jsonData.lastModifiedTimestamp);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    pm.collectionVariables.set(\"access-profile-radius-accounting-service-name\", \"radius-accounting-profile-\"+'{{$isoTimestamp}}');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model_type\": \"Profile\",\n    \"customerId\": 2,\n    \"profileType\": \"radius\",\n    \"name\": \"{{access-profile-radius-accounting-service-name}}\",\n    \"details\": {\n        \"model_type\": \"RadiusProfile\",\n        \"primaryRadiusServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"192.168.0.1\",\n            \"secret\": \"testing123\",\n            \"authPort\": 1812,\n            \"timeout\": null\n        },\n        \"secondaryRadiusServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"192.168.0.2\",\n            \"secret\": \"testing123\",\n            \"authPort\": 1812,\n            \"timeout\": null\n        },\n        \"radiusSubnetConfiguration\": null,\n        \"profileType\": \"radius\"\n    },\n    \"childProfileIds\": []\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Create new osu ssid profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get osu-ssid id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"        pm.collectionVariables.set(\"osu-ssid-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"osu-ssid-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-osu-ssid-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"        pm.collectionVariables.set(\"osu-ssid-name\", \"osu-ssid-profile-\"+'{{$isoTimestamp}}');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"ssid\",\n        \"name\": \"{{osu-ssid-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-open-passpoint\",\n            \"appliedRadios\": [\n                \"is2dot4GHz\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"open\",\n            \"vlanId\": 1,\n            \"keyStr\": null,\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": 0,\n            \"radiusAccountingServiceId\": 0,\n            \"radiusAcountingServiceInterval\": 60,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"wepConfig\": null,\n            \"forwardMode\": null,\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": \"{{$randomUserName}}\"\n            }\n        },\n        \"childProfileIds\": []\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new access ssid profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access-ssid id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"        pm.collectionVariables.set(\"access-ssid-name\", jsonData.name,Number);",
									"",
									"    pm.collectionVariables.set(\"access-ssid-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-access-ssid-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"        pm.collectionVariables.set(\"access-ssid-name\", \"access-ssid-profile-\"+'{{$isoTimestamp}}');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"ssid\",\n        \"name\": \"{{access-ssid-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-access-passpoint\",\n            \"appliedRadios\": [\n                \"is5GHzU\",\n                \"is5GHzL\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"{{access-profile-secure-mode}}\",\n            \"vlanId\": 1,\n            \"keyStr\": \"testing123\",\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": {{radius-profile-id}},\n            \"radiusAccountingServiceId\": {{radius-accounting-profile-id}},\n            \"radiusAcountingServiceInterval\": {{access-profile-radius-accounting-service-interval}},\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"wepConfig\": null,\n            \"forwardMode\": null,\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": \"{{$randomUserName}}\"\n            }\n        },\n        \"childProfileIds\": [\n            {{radius-accounting-profile-id}},\n            {{radius-profile-id}}\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new Venue profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Get venue id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"venue-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"venue-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"venue-last-modified\", jsonData.lastModifiedTimestamp);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"venue-name\", \"venue-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint_venue\",\n        \"name\": \"{{venue-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointVenueProfile\",\n            \"venueNameSet\": [\n                {\n                    \"model_type\": \"PasspointVenueName\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de lieu\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"venueUrl\": \"http://www.example.com/info-fra\",\n                    \"asDuple\": \"fra:Exemple de lieu\"\n                },\n                {\n                    \"model_type\": \"PasspointVenueName\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example passpoint_venue\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"venueUrl\": \"http://www.example.com/info-eng\",\n                    \"asDuple\": \"eng:Example passpoint_venue\"\n                }\n            ],\n            \"venueTypeAssignment\": {\n                \"model_type\": \"PasspointVenueTypeAssignment\",\n                \"venueDescription\": \"Research and Development Facility\",\n                \"venueGroupId\": 2,\n                \"venueTypeId\": 8\n            },\n            \"profileType\": \"passpoint_venue\"\n        },\n        \"childProfileIds\": []\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new Operator profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Get operator id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"operator-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"operator-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"operator-last-modified\", jsonData.lastModifiedTimestamp);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"operator-name\", \"operator-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint_operator\",\n        \"name\": \"{{operator-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOperatorProfile\",\n            \"serverOnlyAuthenticatedL2EncryptionNetwork\": false,\n            \"x509CertificateLocation\": \"/etc/ca.pem\",\n            \"operatorFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Default friendly passpoint_operator name\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Default friendly passpoint_operator name\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Nom de l'opérateur convivial par défaut\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Nom de l'opérateur convivial par défaut\"\n                }\n            ],\n            \"domainNameList\": [\n                \"telus.com\",\n                \"rogers.com\",\n                \"bell.ca\"\n            ],\n            \"profileType\": \"passpoint_operator\"\n        },\n        \"childProfileIds\": []\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new id provider profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get provider-1 id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"provider-name-1\", jsonData.name);",
									"    pm.collectionVariables.set(\"provider-id-1\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"provider1-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"provider-name-1\", \"provider1-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint_osu_id_provider\",\n        \"name\": \"{{provider-name-1}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOsuProviderProfile\",\n            \"mccMncList\": [\n                {\n                    \"model_type\": \"PasspointMccMnc\",\n                    \"mcc\": 302,\n                    \"mnc\": 720,\n                    \"iso\": \"ca\",\n                    \"country\": \"Canada\",\n                    \"countryCode\": 1,\n                    \"network\": \"Rogers AT&T Wireless\",\n                    \"mccMncPairing\": \"302,720\"\n                }\n            ],\n            \"naiRealmList\": [\n                {\n                    \"model_type\": \"PasspointNaiRealmInformation\",\n                    \"naiRealms\": [\n                        \"{{provider-1-domain-name}}\"\n                    ],\n                    \"encoding\": 0,\n                    \"eapMethods\": [\n                        \"EAP-TTLS with username/password\",\n                        \"EAP-TLS with certificate\"\n                    ],\n                    \"eapMap\": {\n                        \"EAP-TTLS with username/password\": [\n                            \"Credential Type:username/password\",\n                            \"Non-EAP Inner Authentication Type:MSCHAPV2\"\n                        ],\n                        \"EAP-TLS with certificate\": [\n                            \"Credential Type:Certificate\"\n                        ]\n                    }\n                }\n            ],\n            \"osuIconList\": [\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_CA\",\n                    \"iconName\": \"icon32eng\",\n                    \"filePath\": \"/tmp/icon32eng.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32eng.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32eng:/tmp/icon32eng.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"fra\",\n                    \"iconLocale\": \"fr_CA\",\n                    \"iconName\": \"icon32fra\",\n                    \"filePath\": \"/tmp/icon32fra.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32fra.png\",\n                    \"hs20IconString\": \"32:32:fra:image/png:icon32fra:/tmp/icon32fra.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_US\",\n                    \"iconName\": \"icon32usa\",\n                    \"filePath\": \"/tmp/icon32usa.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32usa.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32usa:/tmp/icon32usa.png\"\n                }\n            ],\n            \"osuServerUri\": \"https://example.com/osu/rogers\",\n            \"osuFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example provider rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example provider rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de fournisseur rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemple de fournisseur rogers\"\n                }\n            ],\n            \"osuNaiStandalone\": \"anonymous@{{provider-1-domain-name}}\",\n            \"osuNaiShared\": \"anonymous@{{provider-1-domain-name}}\",\n            \"osuMethodList\": [\n                1,\n                0\n            ],\n            \"osuServiceDescription\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example services rogers\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemples de services rogers\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemples de services rogers\"\n                }\n            ],\n            \"roamingOi\": [\n                \"BAA2D00100\",\n                \"BAA2D00000\"\n            ],\n            \"profileType\": \"passpoint_osu_id_provider\"\n        },\n        \"childProfileIds\": []\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create 2nd id provider profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get provider-2 id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"provider-name-2\", jsonData.name);",
									"    pm.collectionVariables.set(\"provider-id-2\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"provider2-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"provider-name-2\", \"provider2-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"id\": 20,\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint_osu_id_provider\",\n        \"name\": \"{{provider-name-2}}\",\n        \"details\": {\n            \"model_type\": \"PasspointOsuProviderProfile\",\n            \"mccMncList\": [\n                {\n                    \"model_type\": \"PasspointMccMnc\",\n                    \"mcc\": 302,\n                    \"mnc\": 220,\n                    \"iso\": \"ca\",\n                    \"country\": \"Canada\",\n                    \"countryCode\": 1,\n                    \"network\": \"Telus Mobility\",\n                    \"mccMncPairing\": \"302,220\"\n                }\n            ],\n            \"naiRealmList\": [\n                {\n                    \"model_type\": \"PasspointNaiRealmInformation\",\n                    \"naiRealms\": [\n                        \"{{provider-2-domain-name}}\"\n                    ],\n                    \"encoding\": 0,\n                    \"eapMethods\": [\n                        \"EAP-TTLS with username/password\",\n                        \"EAP-TLS with certificate\"\n                    ],\n                    \"eapMap\": {\n                        \"EAP-TTLS with username/password\": [\n                            \"Credential Type:username/password\",\n                            \"Non-EAP Inner Authentication Type:MSCHAPV2\"\n                        ],\n                        \"EAP-TLS with certificate\": [\n                            \"Credential Type:Certificate\"\n                        ]\n                    }\n                }\n            ],\n            \"osuIconList\": [\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_CA\",\n                    \"iconName\": \"icon32eng\",\n                    \"filePath\": \"/tmp/icon32eng.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32eng.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32eng:/tmp/icon32eng.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"fra\",\n                    \"iconLocale\": \"fr_CA\",\n                    \"iconName\": \"icon32fra\",\n                    \"filePath\": \"/tmp/icon32fra.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32fra.png\",\n                    \"hs20IconString\": \"32:32:fra:image/png:icon32fra:/tmp/icon32fra.png\"\n                },\n                {\n                    \"model_type\": \"PasspointOsuIcon\",\n                    \"iconWidth\": 32,\n                    \"iconHeight\": 32,\n                    \"languageCode\": \"eng\",\n                    \"iconLocale\": \"en_US\",\n                    \"iconName\": \"icon32usa\",\n                    \"filePath\": \"/tmp/icon32usa.png\",\n                    \"imageUrl\": \"https://localhost:9096/icon32usa.png\",\n                    \"hs20IconString\": \"32:32:eng:image/png:icon32usa:/tmp/icon32usa.png\"\n                }\n            ],\n            \"osuServerUri\": \"https://example.com/osu/telus\",\n            \"osuFriendlyName\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example provider telus\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example provider telus\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemple de fournisseur telus\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemple de fournisseur telus\"\n                }\n            ],\n            \"osuNaiStandalone\": \"anonymous@{{provider-2-domain-name}}\",\n            \"osuNaiShared\": \"anonymous@{{provider-2-domain-name}}\",\n            \"osuMethodList\": [\n                1,\n                0\n            ],\n            \"osuServiceDescription\": [\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"en_CA\",\n                    \"dupleIso3Language\": \"eng\",\n                    \"dupleName\": \"Example services telus\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"eng:Example services telus\"\n                },\n                {\n                    \"model_type\": \"PasspointDuple\",\n                    \"locale\": \"fr_CA\",\n                    \"dupleIso3Language\": \"fra\",\n                    \"dupleName\": \"Exemples de services telus\",\n                    \"defaultDupleSeparator\": \":\",\n                    \"asDuple\": \"fra:Exemples de services telus\"\n                }\n            ],\n            \"roamingOi\": [\n                \"004096\",\n                \"005014\",\n                \"F4F5E8F5F4\"\n            ],\n            \"profileType\": \"passpoint_osu_id_provider\"\n        },\n        \"childProfileIds\": []\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new hotspot2 profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get hotspot id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"hotspot-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"hotspot-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"hotspot-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"hotspot-name\", \"hotspot20-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint\",\n        \"name\": \"{{hotspot-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointProfile\",\n            \"enableInterworkingAndHs20\": true,\n            \"hessid\": null,\n            \"additionalStepsRequiredForAccess\": 0,\n            \"deauthRequestTimeout\": 0,\n            \"operatingClass\": 0,\n            \"termsAndConditionsFile\": {\n                \"model_type\": \"ManagedFileInfo\",\n                \"md5checksum\": null,\n                \"lastModifiedTimestamp\": null,\n                \"apExportUrl\": \"https://localhost:9091/filestore/termsAndConditions\",\n                \"fileCategory\": \"ExternalPolicyConfiguration\",\n                \"fileType\": \"TEXT\",\n                \"altSlot\": false\n            },\n            \"whitelistDomain\": null,\n            \"emergencyServicesReachable\": true,\n            \"unauthenticatedEmergencyServiceAccessible\": false,\n            \"internetConnectivity\": true,\n            \"connectionCapabilitySet\": [\n                {\n                    \"model_type\": \"PasspointConnectionCapability\",\n                    \"connectionCapabilitiesPortNumber\": 8888,\n                    \"connectionCapabilitiesIpProtocol\": \"TCP\",\n                    \"connectionCapabilitiesStatus\": \"open\"\n                }\n            ],\n            \"ipAddressTypeAvailability\": \"public_IPv4_address_available\",\n            \"qosMapSetConfiguration\": null,\n            \"apGeospatialLocation\": null,\n            \"apCivicLocation\": null,\n            \"apPublicLocationIdUri\": null,\n            \"gasAddr3Behaviour\": \"p2pSpecWorkaroundFromRequest\",\n            \"anqpDomainId\": 1234,\n            \"disableDownstreamGroupAddressedForwarding\": false,\n            \"enable2pt4GHz\": true,\n            \"enable5GHz\": true,\n            \"associatedAccessSsidProfileIds\": [\n                {{access-ssid-id}}\n            ],\n            \"osuSsidProfileId\": {{osu-ssid-id}},\n            \"passpointOperatorProfileId\": {{operator-id}},\n            \"passpointVenueProfileId\": {{venue-id}},\n            \"passpointOsuProviderProfileIds\": [\n                {{provider-id-2}},\n                {{provider-id-1}}\n            ],\n            \"profileType\": \"passpoint\"\n        },\n        \"childProfileIds\": [\n            {{operator-id}},\n            {{venue-id}},\n            {{provider-id-1}},\n            {{provider-id-2}}\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Update osu ssid profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get osu-ssid id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"osu-ssid-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-osu-ssid-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"id\": {{osu-ssid-id}},\n        \"customerId\": {{customerId}},\n        \"profileType\": \"ssid\",\n        \"name\": \"{{osu-ssid-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-open-passpoint\",\n            \"appliedRadios\": [\n                \"is2dot4GHz\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"open\",\n            \"vlanId\": 1,\n            \"keyStr\": null,\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": 0,\n            \"radiusAccountingServiceId\": 0,\n            \"radiusAcountingServiceInterval\": 60,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"wepConfig\": null,\n            \"forwardMode\": null,\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"nasOperatorId\": null\n            }\n        },\n        \"childProfileIds\": [\n            {{hotspot-id}}\n        ],\n        \"lastModifiedTimestamp\": {{profile-osu-ssid-last-modified}}\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Update access ssid profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access-ssid id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"access-ssid-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"profile-access-ssid-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"id\": {{access-ssid-id}},\n        \"customerId\": {{customerId}},\n        \"profileType\": \"ssid\",\n        \"name\": \"{{access-ssid-name}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"ssid-access-passpoint\",\n            \"appliedRadios\": [\n                \"is5GHzU\",\n                \"is5GHzL\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"{{access-profile-secure-mode}}\",\n            \"vlanId\": 1,\n            \"keyStr\": \"testing123\",\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": {{radius-profile-id}},\n            \"radiusAccountingServiceId\": {{radius-accounting-profile-id}},\n            \"radiusAcountingServiceInterval\": {{access-profile-radius-accounting-service-interval}},\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"wepConfig\": null,\n            \"forwardMode\": null,\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"nasOperatorId\": \"test\"\n            }\n        },\n        \"childProfileIds\": [\n            {{hotspot-id}},\n            {{radius-accounting-profile-id}},\n            {{radius-profile-id}}\n        ],\n        \"lastModifiedTimestamp\": {{profile-access-ssid-last-modified}}\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Update hotspot2 profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get hotspot id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"hotspot-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"hotspot-id\", jsonData.id,Number);",
									"    pm.collectionVariables.set(\"hotspot-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"id\": {{hotspot-id}},\n        \"customerId\": {{customerId}},\n        \"profileType\": \"passpoint\",\n        \"name\": \"{{hotspot-name}}\",\n        \"details\": {\n            \"model_type\": \"PasspointProfile\",\n            \"enableInterworkingAndHs20\": true,\n            \"hessid\": null,\n            \"additionalStepsRequiredForAccess\": 0,\n            \"deauthRequestTimeout\": 0,\n            \"operatingClass\": 0,\n            \"termsAndConditionsFile\": {\n                \"model_type\": \"ManagedFileInfo\",\n                \"md5checksum\": null,\n                \"lastModifiedTimestamp\": null,\n                \"apExportUrl\": \"https://localhost:9091/filestore/termsAndConditions\",\n                \"fileCategory\": \"ExternalPolicyConfiguration\",\n                \"fileType\": \"TEXT\",\n                \"altSlot\": false\n            },\n            \"whitelistDomain\": null,\n            \"emergencyServicesReachable\": true,\n            \"unauthenticatedEmergencyServiceAccessible\": false,\n            \"internetConnectivity\": true,\n            \"connectionCapabilitySet\": [\n                {\n                    \"model_type\": \"PasspointConnectionCapability\",\n                    \"connectionCapabilitiesPortNumber\": 8888,\n                    \"connectionCapabilitiesIpProtocol\": \"TCP\",\n                    \"connectionCapabilitiesStatus\": \"open\"\n                }\n            ],\n            \"ipAddressTypeAvailability\": \"public_IPv4_address_available\",\n            \"qosMapSetConfiguration\": null,\n            \"apGeospatialLocation\": null,\n            \"apCivicLocation\": null,\n            \"apPublicLocationIdUri\": null,\n            \"gasAddr3Behaviour\": \"p2pSpecWorkaroundFromRequest\",\n            \"anqpDomainId\": 1234,\n            \"disableDownstreamGroupAddressedForwarding\": false,\n            \"enable2pt4GHz\": true,\n            \"enable5GHz\": true,\n            \"associatedAccessSsidProfileIds\": [\n                {{access-ssid-id}}\n            ],\n            \"osuSsidProfileId\": {{osu-ssid-id}},\n            \"passpointOperatorProfileId\": {{operator-id}},\n            \"passpointVenueProfileId\": {{venue-id}},\n            \"passpointOsuProviderProfileIds\": [\n                {{provider-id-2}},\n                {{provider-id-1}}\n            ],\n            \"profileType\": \"passpoint\"\n        },\n            \"lastModifiedTimestamp\": {{hotspot-last-modified}},\n        \"childProfileIds\": [\n            {{operator-id}},\n            {{venue-id}},\n            {{provider-id-1}},\n            {{provider-id-2}}\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Create new ap profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get metrics id\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"profile-ap-name\", jsonData.name);",
									"    pm.collectionVariables.set(\"profile-ap-id\", Number(jsonData.id));",
									"    pm.collectionVariables.set(\"profile-ap-last-modified\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"profile-ap-name\", \"ap-profile-\"+'{{$isoTimestamp}}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"model_type\": \"Profile\",\n        \"customerId\": {{customerId}},\n        \"profileType\": \"equipment_ap\",\n        \"name\": \"{{profile-ap-name}}\",\n        \"details\": {\n            \"model_type\": \"ApNetworkConfiguration\",\n            \"networkConfigVersion\": \"AP-1\",\n            \"equipmentType\": \"AP\",\n            \"vlanNative\": true,\n            \"vlan\": 0,\n            \"ntpServer\": {\n                \"model_type\": \"AutoOrManualString\",\n                \"auto\": true,\n                \"value\": \"pool.ntp.org\"\n            },\n            \"syslogRelay\": null,\n            \"rtlsSettings\": null,\n            \"syntheticClientEnabled\": true,\n            \"ledControlEnabled\": true,\n            \"equipmentDiscovery\": false,\n            \"radioMap\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioProfileConfiguration\",\n                    \"bestApEnabled\": true,\n                    \"bestAPSteerType\": \"both\"\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioProfileConfiguration\",\n                    \"bestApEnabled\": true,\n                    \"bestAPSteerType\": \"both\"\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioProfileConfiguration\",\n                    \"bestApEnabled\": true,\n                    \"bestAPSteerType\": \"both\"\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioProfileConfiguration\",\n                    \"bestApEnabled\": true,\n                    \"bestAPSteerType\": \"both\"\n                }\n            },\n            \"profileType\": \"equipment_ap\"\n        },\n        \"childProfileIds\": [\n            {{rf-profile-id}},\n            {{access-ssid-id}},\n            {{osu-ssid-id}}\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Get Equipment By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"update collectionVariables\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.environment.set(\"equipment-id\", jsonData.id);",
									"    pm.environment.set(\"profile-id\", jsonData.id);",
									"    pm.environment.set(\"equipment-last-modified-timestamp\", jsonData.lastModifiedTimestamp);",
									"    pm.environment.set(\"equipment-inventory-id\", jsonData.inventoryId);",
									"    pm.environment.set(\"equipment-location-id\", jsonData.locationId);",
									"    pm.environment.set(\"equipment-forward-mode\", jsonData.details.forwardMode);",
									"    pm.environment.set(\"equipment-model\", jsonData.details.equipmentModel);",
									"    pm.environment.set(\"equipment-serial-number\", jsonData.serial);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/equipment?equipmentId={{equipment-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"equipment"
							],
							"query": [
								{
									"key": "equipmentId",
									"value": "{{equipment-id}}",
									"description": "(Required) equipment id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Update Equipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update equipment\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id);",
									"    pm.collectionVariables.set(\"equipment-id\", jsonData.id);",
									"    pm.collectionVariables.set(\"equipment-last-modified-timestamp\", jsonData.lastModifiedTimestamp);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model_type\": \"Equipment\",\n    \"id\": {{equipment-id}},\n    \"customerId\": {{customerId}},\n    \"profileId\": {{profile-ap-id}},\n    \"locationId\": {{equipment-location-id}},\n    \"equipmentType\": \"AP\",\n    \"inventoryId\": \"{{equipment-inventory-id}}\",\n    \"name\": \"{{equipment-inventory-id}}\",\n    \"details\": {\n        \"model_type\": \"ApElementConfiguration\",\n        \"equipmentModel\": \"{{equipment-model}}\",\n        \"elementConfigVersion\": \"AP-V1\",\n        \"equipmentType\": \"AP\",\n        \"deviceMode\": \"standaloneAP\",\n        \"gettingIP\": \"dhcp\",\n        \"staticIP\": null,\n        \"staticIpMaskCidr\": null,\n        \"staticIpGw\": null,\n        \"gettingDNS\": \"dhcp\",\n        \"staticDnsIp1\": null,\n        \"staticDnsIp2\": null,\n        \"peerInfoList\": [],\n        \"deviceName\": \"{{equipment-inventory-id}}\",\n        \"locationData\": null,\n        \"locallyConfiguredMgmtVlan\": 0,\n        \"locallyConfigured\": false,\n        \"deploymentType\": \"CEILING\",\n        \"syntheticClientEnabled\": null,\n        \"frameReportThrottleEnabled\": true,\n        \"antennaType\": \"OMNI\",\n        \"costSavingEventsEnabled\": true,\n        \"forwardMode\": \"{{equipment-forward-mode}}\",\n        \"radioMap\": {\n            \"is5GHzL\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"channelNumber\": 36,\n                \"manualChannelNumber\": 36,\n                \"backupChannelNumber\": 44,\n                \"bannedChannels\": [],\n                \"allowedChannels\": [\n                    48,\n                    64,\n                    36,\n                    52,\n                    40,\n                    56,\n                    44,\n                    60\n                ],\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": []\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"channelNumber\": 6,\n                \"manualChannelNumber\": 6,\n                \"backupChannelNumber\": 11,\n                \"bannedChannels\": [],\n                \"allowedChannels\": [\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9,\n                    10,\n                    11\n                ],\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": []\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"channelNumber\": 149,\n                \"manualChannelNumber\": 149,\n                \"backupChannelNumber\": 154,\n                \"bannedChannels\": [],\n                \"allowedChannels\": [\n                    161,\n                    100,\n                    132,\n                    165,\n                    104,\n                    136,\n                    108,\n                    140,\n                    112,\n                    144,\n                    116,\n                    149,\n                    153,\n                    157\n                ],\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": []\n            }\n        },\n        \"advancedRadioMap\": {\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"wmmState\": \"enabled\",\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 20,\n                        \"minLoadFactor\": 50\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"wmmState\": \"enabled\",\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"wmmState\": \"enabled\",\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            }\n        }\n    },\n    \"latitude\": null,\n    \"longitude\": null,\n    \"baseMacAddress\": {\n        \"model_type\": \"MacAddress\",\n        \"address\": \"JPWi7y5T\",\n        \"addressAsString\": \"24:f5:a2:ef:2e:53\"\n    },\n    \"serial\": \"{{equipment-serial-number}}\",\n    \"lastModifiedTimestamp\": {{equipment-last-modified-timestamp}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/equipment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"equipment"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				}
			],
			"description": "Run these in order, you will end up with an AP Profile, with hotspot profiles, etc.\nUse the provided environment (Collection) as it takes the values from the IDs for the created profiles to make the parent/child relationships\nYou can change the names as you please, in the variables of the environment as well\n\nAssign the ID for the AP Profile to your EA-8300 equipment.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Get access token - to be used as Bearer token header for all other API requests.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get access token\", function() {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.access_token);",
									"    pm.collectionVariables.set(\"access-token\", jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"do anim\",\n \"refresh_token\": \"ut cillum id\",\n \"token_type\": \"elit consequat\",\n \"expires_in\": 41796161,\n \"idle_timeout\": 17636219,\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": false,\n   \"ReadWrite\": true,\n   \"ReadWriteCreate\": true,\n   \"Delete\": false,\n   \"PortalLogin\": false\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Delete Access SSID profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{access-ssid-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{access-ssid-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete OSU Ssid Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{osu-ssid-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{osu-ssid-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Metrics Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{metrics-profile-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{metrics-profile-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete AP Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{profile-ap-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{profile-ap-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Radius Accounting Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{radius-accounting-profile-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{radius-accounting-profile-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Radius Accounting Profile Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{radius-profile-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{radius-profile-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Delete Rf Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{rf-profile-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{rf-profile-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Operator Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{operator-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{operator-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Venue Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{venue-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{venue-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Delete Hotspot Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{hotspot-id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{hotspot-id}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						}
					]
				},
				{
					"name": "Delete Provider 1 Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{provider-id-1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{provider-id-1}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				},
				{
					"name": "Delete Provider 2 Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/profile?profileId={{provider-id-2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							],
							"query": [
								{
									"key": "profileId",
									"value": "{{provider-id-2}}",
									"description": "(Required) profile id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
						}
					]
				}
			],
			"description": "Mostly useful for cleaning up the profiles you no longer need, especially if they are on the cloud.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const timestampInSeconds = new Date().getTime();",
					"pm.collectionVariables.set(\"to_timestamp\", new Date().getTime());",
					"pm.collectionVariables.set(\"from_timestamp\", pm.environment.get(\"to_timestamp\")-120000);",
					"console.log(pm.collectionVariables.get(\"from_timestamp\"));",
					"console.log(pm.collectionVariables.get(\"to_timestamp\"));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:9091"
		},
		{
			"key": "access-token",
			"value": "eyJpc3MiOiJ0aXAiLCJqdGkiOiI2MjhhNWNlOC02OTE3LTRjYjEtYTUwYS1mMWEwMzA5OTlmZDUiLCJleHBpcnlUaW1lIjoxNjExMzU1MjMxMDE5LCJjdXN0b21lcklkIjoyLCJ1c2VyTmFtZSI6InN1cHBvcnRAZXhhbXBsZS5jb20iLCJ1c2VySWQiOjAsInVzZXJSb2xlIjpbIlN1cGVyVXNlciJdfQ==.2eGSxxm/GwF/O/ERkDwg9blKBG1bTbpsPb5S.AjafA5uQzgLYmO8NOV9q2ljT0z0py9H4T1xmHxUGLkgz9cwr/"
		},
		{
			"key": "operator-id",
			"value": 14
		},
		{
			"key": "operator-last-modified",
			"value": 1611352257278
		},
		{
			"key": "operator-name",
			"value": "operator-profile-2021-01-22T21:50:57.251Z"
		},
		{
			"key": "venue-id",
			"value": 13
		},
		{
			"key": "venue-last-modified",
			"value": 1611352253728
		},
		{
			"key": "venue-name",
			"value": "venue-profile-2021-01-22T21:50:53.697Z"
		},
		{
			"key": "provider-id-1",
			"value": 15
		},
		{
			"key": "provider1-last-modified",
			"value": 1611352260580
		},
		{
			"key": "provider-name-1",
			"value": "provider1-profile-2021-01-22T21:51:00.552Z"
		},
		{
			"key": "provider-name-2",
			"value": "provider2-profile-2021-01-22T21:51:04.002Z"
		},
		{
			"key": "provider-id-2",
			"value": 16
		},
		{
			"key": "provider2-last-modified",
			"value": 1611352264025
		},
		{
			"key": "hotspot-id",
			"value": 17
		},
		{
			"key": "hotspot-name",
			"value": "hotspot20-profile-2021-01-22T21:51:07.733Z"
		},
		{
			"key": "hotspot-last-modified",
			"value": 1611352268380
		},
		{
			"key": "osu-ssid-id",
			"value": 11
		},
		{
			"key": "osu-ssid-name",
			"value": "osu-ssid-profile-2021-01-22T21:50:41.603Z"
		},
		{
			"key": "profile-osu-ssid-last-modified",
			"value": 1611352274470
		},
		{
			"key": "access-ssid-name",
			"value": "access-ssid-profile-2021-01-22T21:50:46.972Z"
		},
		{
			"key": "rf-profile-name",
			"value": "TipWlan-rf"
		},
		{
			"key": "rf-profile-id",
			"value": "4"
		},
		{
			"key": "profile-rf-last-modified",
			"value": "0"
		},
		{
			"key": "profile-ap-id",
			"value": 18
		},
		{
			"key": "profile-ap-name",
			"value": "ap-profile-2021-01-22T21:51:25.796Z"
		},
		{
			"key": "profile-ap-last-modified",
			"value": 1611352285821
		},
		{
			"key": "access-ssid-id",
			"value": 12
		},
		{
			"key": "profile-access-ssid-last-modified",
			"value": 1611352278649
		},
		{
			"key": "equipment-last-modified-timestamp",
			"value": 1611352686818
		},
		{
			"key": "equipment-id",
			"value": 1
		},
		{
			"key": "access-profile-radius-service-name",
			"value": "radius-profile-2021-01-22T21:50:34.659Z"
		},
		{
			"key": "access-profile-secure-mode",
			"value": "wpa2EAP"
		},
		{
			"key": "radius-profile-id",
			"value": 9
		},
		{
			"key": "operator-domain-name",
			"value": "telecominfraproject.atlassian.net"
		},
		{
			"key": "access-profile-radius-accounting-service-name",
			"value": "radius-accounting-profile-2021-01-22T21:50:37.726Z"
		},
		{
			"key": "radius-accounting-profile-id",
			"value": 10
		},
		{
			"key": "profile-radius-last-modified",
			"value": 1611352234867
		},
		{
			"key": "profile-radius-accounting-last-modified",
			"value": 1611352237755
		},
		{
			"key": "radius-auth-port",
			"value": "1812"
		},
		{
			"key": "radius-accounting-auth-port",
			"value": "1813"
		},
		{
			"key": "radius-accounting-service-region-name",
			"value": "Ottawa"
		},
		{
			"key": "radius-service-region-name",
			"value": "Ottawa"
		},
		{
			"key": "radius-service-ip",
			"value": "192.168.1.101"
		},
		{
			"key": "radius-accounting-service-ip",
			"value": "192.168.1.101"
		},
		{
			"key": "equipment-location-id",
			"value": 8
		},
		{
			"key": "equipment-inventory-id",
			"value": "Open_AP_21P10C68818122"
		},
		{
			"key": "equipment-model",
			"value": "EA8300-CA"
		},
		{
			"key": "equipment-serial-number",
			"value": "21P10C68818122"
		},
		{
			"key": "equipment-forward-mode",
			"value": "BRIDGE"
		},
		{
			"key": "from_timestamp",
			"value": null
		},
		{
			"key": "to_timestamp",
			"value": 1611352686741
		},
		{
			"key": "access-profile-radius-accounting-service-interval",
			"value": 60
		},
		{
			"key": "userId",
			"value": "support@example.com"
		},
		{
			"key": "password",
			"value": "support"
		},
		{
			"key": "customerId",
			"value": "2"
		},
		{
			"key": "provider-1-domain-name",
			"value": "rogers.com"
		},
		{
			"key": "provider-2-domain-name",
			"value": "telus.com"
		},
		{
			"key": "profile-id",
			"value": null
		}
	]
}