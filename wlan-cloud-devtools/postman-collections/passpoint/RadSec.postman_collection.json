{
	"info": {
		"_postman_id": "8cd82582-b1bf-4363-81e6-689fc5c8b7a4",
		"name": "RadSec",
		"description": "Creates a Radius Profile, RfProfile, and 2 SSID Profiles (one with Proxy, one without Proxy) and an AP Profile.\nThe AP Profile can then be applied to the given equipment type.\n\nExpected behaviour is creation of 2 SSIDs per RadioBand on the the AP. The non-proxy SSID should have the EAP Radius information visible in both the Wifi_VIF_Config and the Wifi_VIF_State tables, the proxy SSID should only show the APs hard-coded values related to proxy in the Wifi_VIF_State, with nothing related to Radius beyond the WPA type in the Security map of the Wifi_VIF_Config table.\n\nThe following can be done on the AP to validate radios and configs:\n:~# /usr/opensync/tools/ovsh s Radius_Proxy_Config\n:~# /usr/opensync/tools/ovsh s Wifi_VIF_Config\n:~# /usr/opensync/tools/ovsh s Wifi_VIF_State\n:~# iwinfo | grep Tx",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get access token - to be used as Bearer token header for all other API requests. Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Get access token\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.access_token);",
							"    pm.environment.set(\"access-token\", jsonData.access_token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/management/v1/oauth2/token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"management",
						"v1",
						"oauth2",
						"token"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"<string>\",\n \"error\": \"<string>\",\n \"path\": \"<string>\",\n \"timestamp\": \"<long>\"\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"access_token\": \"<string>\",\n \"refresh_token\": \"<string>\",\n \"id_token\": \"<string>\",\n \"token_type\": \"<string>\",\n \"expires_in\": \"<integer>\",\n \"idle_timeout\": \"<integer>\",\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": \"<boolean>\",\n   \"ReadWrite\": \"<boolean>\",\n   \"ReadWriteCreate\": \"<boolean>\",\n   \"Delete\": \"<boolean>\",\n   \"PortalLogin\": \"<boolean>\"\n  }\n }\n}"
				}
			]
		},
		{
			"name": "Create new Radius Server Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get radius server id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"radius-profile-id\", jsonData.id,Number);",
							"    pm.environment.set(\"profile-radius-last-modified\", jsonData.lastModifiedTimestamp);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"radius-profile-name\", \"radius-profile-\"+'{{$randomUserName}}');",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "        {\n            \"model_type\": \"Profile\",\n            \"customerId\": 2,\n            \"profileType\": \"radius\",\n            \"name\": \"{{radius-profile-name}}\",\n            \"details\": {\n                \"model_type\": \"RadiusProfile\",\n                \"primaryRadiusAuthServer\": {\n                    \"model_type\": \"RadiusServer\",\n                    \"ipAddress\": \"192.168.1.101\",\n                    \"secret\": \"{{$randomPassword}}\",\n                    \"port\": 1812,\n                    \"timeout\": 5\n                },\n                \"secondaryRadiusAuthServer\": null,\n                \"primaryRadiusAccountingServer\": {\n                    \"model_type\": \"RadiusServer\",\n                    \"ipAddress\": \"192.168.1.101\",\n                    \"secret\": \"{{$randomPassword}}\",\n                    \"port\": 1813,\n                    \"timeout\": 5\n                },\n                \"secondaryRadiusAccountingServer\": null,\n                \"profileType\": \"radius\"\n            },\n            \"childProfileIds\": []\n        }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		},
		{
			"name": "Create new Rf Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get rf profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"rf-profile-name\", jsonData.name);",
							"    pm.environment.set(\"rf-profile-id\", jsonData.id,Number);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"rf-profile-name\", \"rf-profile-\"+'{{$randomUserName}}');",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"{{rf-profile-name}}\",\n        \"name\": \"{{rf-profile-name}}\",\n        \"details\": {\n            \"model_type\": \"RfConfiguration\",\n            \"rfConfigMap\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHz\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"autoCellSizeSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"maxAutoCellSize\": -90,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is2dot4GHz\",\n                    \"radioMode\": \"modeN\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is20MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"autoCellSizeSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"maxAutoCellSize\": -90,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 20,\n                        \"minLoadFactor\": 50\n                    }\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHzU\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"autoCellSizeSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"maxAutoCellSize\": -90,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RfElementConfiguration\",\n                    \"radioType\": \"is5GHzL\",\n                    \"radioMode\": \"modeAC\",\n                    \"rf\": \"{{rf-profile-name}}\",\n                    \"beaconInterval\": 100,\n                    \"forceScanDuringVoice\": \"disabled\",\n                    \"rtsCtsThreshold\": 65535,\n                    \"channelBandwidth\": \"is80MHz\",\n                    \"mimoMode\": \"twoByTwo\",\n                    \"maxNumClients\": 100,\n                    \"autoChannelSelection\": false,\n                    \"autoCellSizeSelection\": false,\n                    \"activeScanSettings\": {\n                        \"model_type\": \"ActiveScanSettings\",\n                        \"enabled\": true,\n                        \"scanFrequencySeconds\": 10,\n                        \"scanDurationMillis\": 65\n                    },\n                    \"neighbouringListApConfig\": {\n                        \"model_type\": \"NeighbouringAPListConfiguration\",\n                        \"minSignal\": -85,\n                        \"maxAps\": 25\n                    },\n                    \"minAutoCellSize\": -65,\n                    \"maxAutoCellSize\": -90,\n                    \"perimeterDetectionEnabled\": true,\n                    \"channelHopSettings\": {\n                        \"model_type\": \"ChannelHopSettings\",\n                        \"noiseFloorThresholdInDB\": -75,\n                        \"noiseFloorThresholdTimeInSeconds\": 180,\n                        \"nonWifiThresholdInPercentage\": 50,\n                        \"nonWifiThresholdTimeInSeconds\": 180,\n                        \"obssHopMode\": \"NON_WIFI\"\n                    },\n                    \"bestApEnabled\": null,\n                    \"multicastRate\": \"auto\",\n                    \"managementRate\": \"auto\",\n                    \"rxCellSizeDb\": -90,\n                    \"probeResponseThresholdDb\": -90,\n                    \"clientDisconnectThresholdDb\": -90,\n                    \"eirpTxPower\": 18,\n                    \"bestApSettings\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                }\n            },\n            \"profileType\": \"rf\"\n        },\n        \"childProfileIds\": []\n    }"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new ssid profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get ssid no proxy profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"ssid-profile-no-proxy\", jsonData.name,Number);",
							"    pm.environment.set(\"ssid-profile-no-proxy-id\", jsonData.id,Number);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ssid-profile-no-proxy\", \"ssid_noproxy-\"+'{{$randomUserName}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"ssid\",\n        \"name\": \"{{ssid-profile-no-proxy}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"{{ssid-profile-no-proxy}}\",\n            \"appliedRadios\": [\n                \"is5GHz\",\n                \"is5GHzU\",\n                \"is5GHzL\",\n                \"is2dot4GHz\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"wpa2EAP\",\n            \"vlanId\": 1,\n            \"dynamicVlan\": \"disabled\",\n            \"keyStr\": \"openwifi\",\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": {{radius-profile-id}},\n            \"radiusAcountingServiceInterval\": 0,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"useRadiusProxy\": false,\n            \"wepConfig\": null,\n            \"forwardMode\": \"BRIDGE\",\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": null\n            }\n        },\n        \"childProfileIds\": [\n            {{radius-profile-id}}\n        ]\n    }\n"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new ssid profile with proxy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get ssid with proxy profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.id);",
							"    pm.environment.set(\"ssid-profile-with-proxy\", jsonData.name,Number);",
							"    pm.environment.set(\"ssid-profile-with-proxy-id\", jsonData.id,Number);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"ssid-profile-with-proxy\", \"ssid_proxy-\"+'{{$randomUserName}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"model_type\": \"Profile\",\n        \"customerId\": 2,\n        \"profileType\": \"ssid\",\n        \"name\": \"{{ssid-profile-with-proxy}}\",\n        \"details\": {\n            \"model_type\": \"SsidConfiguration\",\n            \"ssid\": \"{{ssid-profile-with-proxy}}\",\n            \"appliedRadios\": [\n                \"is5GHz\",\n                \"is5GHzU\",\n                \"is5GHzL\",\n                \"is2dot4GHz\"\n            ],\n            \"ssidAdminState\": \"enabled\",\n            \"secureMode\": \"wpa2EAP\",\n            \"vlanId\": 1,\n            \"dynamicVlan\": \"disabled\",\n            \"keyStr\": \"openwifi\",\n            \"broadcastSsid\": \"enabled\",\n            \"keyRefresh\": 0,\n            \"noLocalSubnets\": false,\n            \"radiusServiceId\": {{radius-profile-id}},\n            \"radiusAcountingServiceInterval\": 0,\n            \"captivePortalId\": null,\n            \"bandwidthLimitDown\": 0,\n            \"bandwidthLimitUp\": 0,\n            \"clientBandwidthLimitDown\": 0,\n            \"clientBandwidthLimitUp\": 0,\n            \"videoTrafficOnly\": false,\n            \"radioBasedConfigs\": {\n                \"is5GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzL\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is2dot4GHz\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                },\n                \"is5GHzU\": {\n                    \"model_type\": \"RadioBasedSsidConfiguration\",\n                    \"enable80211r\": null,\n                    \"enable80211k\": null,\n                    \"enable80211v\": null\n                }\n            },\n            \"bonjourGatewayProfileId\": null,\n            \"enable80211w\": null,\n            \"useRadiusProxy\": true,\n            \"wepConfig\": null,\n            \"forwardMode\": \"BRIDGE\",\n            \"profileType\": \"ssid\",\n            \"radiusClientConfiguration\": {\n                \"model_type\": \"RadiusNasConfiguration\",\n                \"nasClientId\": \"DEFAULT\",\n                \"nasClientIp\": \"WAN_IP\",\n                \"userDefinedNasId\": null,\n                \"userDefinedNasIp\": null,\n                \"operatorId\": null\n            }\n        },\n        \"childProfileIds\": [\n        ]\n    }\n"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				}
			]
		},
		{
			"name": "Create new ap profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"});",
							"pm.test(\"Get equipment_ap profile id\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"profile-ap-name\", jsonData.name);",
							"    pm.environment.set(\"profile-ap-id\", Number(jsonData.id));",
							"    pm.environment.set(\"profile-ap-last-modified\", jsonData.lastModifiedTimestamp);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"profile-ap-name\", \"ap-radsec-profile-\"+'{{$randomUserName}}');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"model_type\": \"Profile\",\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"{{profile-ap-name}}\",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": \"pool.ntp.org\"\n        },\n        \"syslogRelay\": null,\n        \"rtlsSettings\": null,\n        \"syntheticClientEnabled\": true,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": \"gre1\",\n                \"greRemoteInetAddr\": \"192.168.1.101\",\n                \"vlanIdsInGreTunnel\": [\n                    100\n                ]\n            }\n        ],\n        \"radiusProxyConfigurations\": [\n            {\n                \"model_type\": \"RadiusProxyConfiguration\",\n                \"caCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": \"YjNmZmE3NjJmZTU4ZjY3ZGZhNjA1ODAwOWI5YjU5ZTA=\",\n                    \"lastModifiedTimestamp\": 1620404566697,\n                    \"apExportUrl\": \"{{$randomDirectoryPath}}/cacert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientCert\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": \"NDA5MmZiN2Q5MDFiMWJmNDczMDhmOTI0ZGI2YWE2NjI=\",\n                    \"lastModifiedTimestamp\": 1620404566697,\n                    \"apExportUrl\": \"{{$randomDirectoryPath}}/clientcert.pem\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"PEM\",\n                    \"altSlot\": false\n                },\n                \"clientKey\": {\n                    \"model_type\": \"ManagedFileInfo\",\n                    \"md5checksum\": \"ODg5OTU4Mzk0N2Q2NzJhZGEzY2JiNzIzMjMxZTJiYTI=\",\n                    \"lastModifiedTimestamp\": 1620404566697,\n                    \"apExportUrl\": \"{{$randomDirectoryPath}}/client_dec.key\",\n                    \"fileCategory\": \"RadSecAuthentication\",\n                    \"fileType\": \"KEY\",\n                    \"altSlot\": false\n                },\n                \"server\": \"{{$randomIP}}\",\n                \"port\": 1812,\n                \"acctServer\": \"{{$randomIP}}\",\n                \"acctPort\": 1813,\n                \"realm\": [\n                    \"{{$randomDomainName}}\",\n                    \"{{$randomDomainName}}\",\n                    \"{{$randomDomainName}}\"\n                ],\n                \"name\": \"{{$randomCommonFileName}}\",\n                \"passphrase\": \"secret\",\n                \"useRadSec\": true,\n                \"sharedSecret\": \"{{$randomPassword}}\",\n                \"acctSharedSecret\": \"{{$randomPassword}}\",\n                \"dynamicDiscovery\": true\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"childProfileIds\": [\n        {{rf-profile-id}},\n        {{ssid-profile-with-proxy-id}},\n        {{ssid-profile-no-proxy-id}}\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/portal/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"portal",
						"profile"
					]
				}
			},
			"response": [
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"culpa vel\",\n \"path\": \"aliquip reprehenderit dolore Ut\",\n \"timestamp\": -76959078\n}"
				},
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/portal/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:9091"
		}
	]
}